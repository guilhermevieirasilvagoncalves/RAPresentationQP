// Copyright (C) 2016  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Intel and sold by Intel or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "04/07/2022 21:58:04"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          projeto_1
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module projeto_1_vlg_vec_tst();
// constants                                           
// general purpose registers
reg S0;
reg S1;
reg S2;
// wires                                               
wire HEX0A;
wire HEX0B;
wire HEX0C;
wire HEX0D;
wire HEX0E;
wire HEX0F;
wire HEX0G;
wire HEX1A;
wire HEX1B;
wire HEX1C;
wire HEX1D;
wire HEX1E;
wire HEX1F;
wire HEX1G;
wire L0;
wire L1;
wire L2;
wire L3;

// assign statements (if any)                          
projeto_1 i1 (
// port map - connection between master ports and signals/registers   
	.HEX0A(HEX0A),
	.HEX0B(HEX0B),
	.HEX0C(HEX0C),
	.HEX0D(HEX0D),
	.HEX0E(HEX0E),
	.HEX0F(HEX0F),
	.HEX0G(HEX0G),
	.HEX1A(HEX1A),
	.HEX1B(HEX1B),
	.HEX1C(HEX1C),
	.HEX1D(HEX1D),
	.HEX1E(HEX1E),
	.HEX1F(HEX1F),
	.HEX1G(HEX1G),
	.L0(L0),
	.L1(L1),
	.L2(L2),
	.L3(L3),
	.S0(S0),
	.S1(S1),
	.S2(S2)
);
initial 
begin 
#1000000 $finish;
end 

// S2
initial
begin
	S2 = 1'b0;
	S2 = #400000 1'b1;
	S2 = #400000 1'b0;
end 

// S1
initial
begin
	repeat(2)
	begin
		S1 = 1'b0;
		S1 = #200000 1'b1;
		# 200000;
	end
	S1 = 1'b0;
end 

// S0
always
begin
	S0 = 1'b0;
	S0 = #100000 1'b1;
	#100000;
end 
endmodule

